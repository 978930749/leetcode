TinyURL是一种URL简化服务， 比如：当你输入一个URL https://leetcode.com/problems/design-tinyurl 时，它将返回一个简化的URL http://tinyurl.com/4e9iAk.
要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。

思路：
每个longURL对应六位random码。
用两个哈希表模拟数据库查找。

import random
class Codec:
    
    def __init__(self):
        self.alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
        self.s2l = dict()
        self.l2s = dict()
        
    def encode(self, longUrl):
        """Encodes a URL to a shortened URL.
        
        :type longUrl: str
        :rtype: str
        """
        while longUrl not in self.l2s:
            code = "".join(random.choice(self.alphabet) for _ in range(6))
            if code not in self.s2l:
                self.s2l[code] = longUrl
                self.l2s[longUrl] = code
            
        return "http://tinyurl.com/" + self.l2s[longUrl]
        
    def decode(self, shortUrl):
        """Decodes a shortened URL to its original URL.
        
        :type shortUrl: str
        :rtype: str
        """
        key = shortUrl[-6:]
        return self.s2l[key]
